# Authors: Charles Bricker<MajMongoose>, K4YT3X <i@k4yt3x.com>
# Compiles dvmfne2 for Linux, Windows, and upload the compiled files into a release
# Utilizes portions of the pipeline written by K4YT3X in their fork. https://github.com/k4yt3x/dvmfne2/blob/master/.github/workflows/release.yml
# TODO TODO TODO - Clean up the process.

name: Release FNE2
on:
  push:
    tags:
      - "*"

permissions:
  contents: write

jobs:

  setup:
    name: Setup
    runs-on: ubuntu-20.04
    outputs:
      VERSION: ${{ steps.get_version.outputs.VERSION }}
    steps:
      - name: Get version
        id: get_version
        run: echo VERSION=${GITHUB_REF/refs\/tags\//} >> $GITHUB_OUTPUT

  publish-linux-x64:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: FNERouter Restore dependencies
      working-directory: ./src/fnerouter
      run: dotnet restore
    - name: FNERouter Build
      working-directory: ./src/fnerouter
      run: dotnet publish -r linux-x64 -c Release
    - name: FNERouter Package
      working-directory: ./src/fnerouter/
      run: tar -czf FNERouter-${{ needs.setup.outputs.VERSION }}-Linux-x64.tar.gz bin/Release/netcoreapp3.1/linux-x64/publish/*
    - name: 'Upload Router'
      uses: actions/upload-artifact@v3
      with:
        name: FNERouter-${{ needs.setup.outputs.VERSION }}-Linux-x64.tar.gz
        path: ./src/fnerouter/
        retention-days: 5
    - name: FNEParrot Restore dependencies
      working-directory: ./src/fneparrot
      run: dotnet restore
    - name: FNEParrot Build
      working-directory: ./src/fneparrot
      run: dotnet publish -r linux-x64 -c Release
    - name: FNEParrot Package
      working-directory: ./src/fneparrot/
      run: tar -czf FNEParrot-${{ needs.setup.outputs.VERSION }}-Linux-64.tar.gz bin/Release/netcoreapp3.1/linux-x64/publish/*
    - name: 'Upload Parrot'
      uses: actions/upload-artifact@v3
      with:
        name: FNEParrot-${{ needs.setup.outputs.VERSION }}-Linux-64.tar.gz
        path: ./src/fneparrot/
        retention-days: 5
#    - name: 'Upload Monitor'
#      uses: actions/upload-artifact@v3
#      with:
#        name: monitor-linux_x64
#        path: fnemonitor/bin/Release/net6.0/linux-x64/publish
#        retention-days: 5
    
  publish-linux-arm64:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: FNERouter Restore dependencies
      working-directory: ./src/fnerouter
      run: dotnet restore
    - name: FNERouter Build
      working-directory: ./src/fnerouter
      run: dotnet publish -r linux-arm64 -c Release
    - name: FNERouter Package
      working-directory: ./src/fnerouter/
      run: tar -czf FNERouter-${{ needs.setup.outputs.VERSION }}-Linux-arm64.tar.gz bin/Release/netcoreapp3.1/linux-arm64/publish/*
    - name: 'Upload Router'
      uses: actions/upload-artifact@v3
      with:
        name: FNERouter-${{ needs.setup.outputs.VERSION }}-Linux-arm64.tar.gz
        path: ./src/fnerouter/
        retention-days: 5
    - name: FNEParrot Restore dependencies
      working-directory: ./src/fneparrot
      run: dotnet restore
    - name: FNEParrot Build
      working-directory: ./src/fneparrot
      run: dotnet publish -r linux-arm64 -c Release
    - name: FNEParrot Package
      working-directory: ./src/fneparrot/
      run: tar -czf FNEParrot-${{ needs.setup.outputs.VERSION }}-Linux-arm64.tar.gz bin/Release/netcoreapp3.1/linux-arm64/publish/*
    - name: 'Upload Parrot'
      uses: actions/upload-artifact@v3
      with:
        name: FNEParrot-${{ needs.setup.outputs.VERSION }}-Linux-arm64.tar.gz
        path: ./src/fneparrot/
        retention-days: 5
#    - name: 'Upload Monitor'
#      uses: actions/upload-artifact@v3
#      with:
#        name: monitor-linux_arm64
#        path: fnemonitor/bin/Release/net6.0/linux-arm64/publish
#        retention-days: 5
      
  publish-windows-x64:
    needs: setup
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: FNERouter Restore dependencies
      working-directory: ./src/fnerouter
      run: dotnet restore
    - name: FNERouter Build
      working-directory: ./src/fnerouter
      run: dotnet publish -r win-x64 -c Release
    - name: FNERouter Package
      working-directory: ./src/fnerouter/
      run: Compress-Archive -Path bin/Release/netcoreapp3.1/win-x64/publish/* -DestinationPath FNERouter-${{ needs.setup.outputs.VERSION }}-Win64.zip
    - name: 'Upload Router'
      uses: actions/upload-artifact@v3
      with:
        name: FNERouter-${{ needs.setup.outputs.VERSION }}-Win64.zip
        path: ./src/fnerouter/
        retention-days: 5

    - name: FNEParrot Restore dependencies
      working-directory: ./src/fneparrot
      run: dotnet restore
    - name: FNEParrot Build
      working-directory: ./src/fneparrot
      run: dotnet publish -r win-x64 -c Release
    - name: FNEParrot Package
      working-directory: ./src/fneparrot/
      run: Compress-Archive -Path bin/Release/netcoreapp3.1/win-x64/publish/* -DestinationPath FNEParrot-${{ needs.setup.outputs.VERSION }}-Win64.zip
    - name: 'Upload Parrot'
      uses: actions/upload-artifact@v3
      with:
        name: FNEParrot-${{ needs.setup.outputs.VERSION }}-Win64.zip
        path: ./src/fneparrot/
        retention-days: 5
#    - name: 'Upload Monitor'
#      uses: actions/upload-artifact@v3
#      with:
#        name: monitor-windows_x64
#        path: fnemonitor/bin/Release/net6.0/win-x64/publish
#        retention-days: 5
  create-release:
    name: Create Release
    needs: [setup,publish-linux-x64, publish-linux-arm64,publish-windows-x64]
    runs-on: ubuntu-20.04
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.setup.outputs.VERSION }}
          name: Release ${{ needs.setup.outputs.VERSION }}
          draft: false
          prerelease: false

  upload:
    name: Upload
    needs: [setup,publish-linux-x64, publish-linux-arm64,publish-windows-x64,create-release]
    runs-on: ubuntu-20.04
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
      - name: Download fnerouter-linux64 artifact
        uses: actions/download-artifact@v2
        with:
          name: FNERouter-${{ needs.setup.outputs.VERSION }}-Linux-x64.tar.gz
      - name: Download fnerouter-linuxarm64 artifact
        uses: actions/download-artifact@v2
        with:
          name: FNERouter-${{ needs.setup.outputs.VERSION }}-Linux-arm64.tar.gz
      - name: Download fnerouter-win64 artifact
        uses: actions/download-artifact@v2
        with:
          name: FNERouter-${{ needs.setup.outputs.VERSION }}-Win64.zip
      - name: Download fneparrot-linux64 artifact
        uses: actions/download-artifact@v2
        with:
          name: FNERouter-${{ needs.setup.outputs.VERSION }}-Linux-x64.tar.gz
      - name: Download fneparrot-linuxarm64 artifact
        uses: actions/download-artifact@v2
        with:
          name: FNEParrot-${{ needs.setup.outputs.VERSION }}-Linux-arm64.tar.gz
      - name: Download fneparrot-win64 artifact
        uses: actions/download-artifact@v2
        with:
          name: FNEParrot-${{ needs.setup.outputs.VERSION }}-Win64.zip
      - name: Upload release asset Linux-x64.tar.gz
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: FNERouter-${{ needs.setup.outputs.VERSION }}-Linux-x64.tar.gz
          asset_name: FNERouter-${{ needs.setup.outputs.VERSION }}-Linux-x64.tar.gz
          asset_content_type: application/gzip
      - name: Upload release asset Linux-arm64.tar.gz
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: FNERouter-${{ needs.setup.outputs.VERSION }}-Linux-arm64.tar.gz
          asset_name: FNERouter-${{ needs.setup.outputs.VERSION }}-Linux-arm64.tar.gz
          asset_content_type: application/gzip
      - name: Upload release asset Winx64.zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: FNERouter-${{ needs.setup.outputs.VERSION }}-Win64.zip
          asset_name: FNERouter-${{ needs.setup.outputs.VERSION }}-Win64.zip
          asset_content_type: application/zip
      - name: Upload release asset Linux-x64.tar.gz
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: FNEParrot-${{ needs.setup.outputs.VERSION }}-Linux-x64.tar.gz
          asset_name: FNEParrot-${{ needs.setup.outputs.VERSION }}-Linux-x64.tar.gz
          asset_content_type: application/gzip
      - name: Upload release asset Linux-arm64.tar.gz
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: FNEParrot-${{ needs.setup.outputs.VERSION }}-Linux-arm64.tar.gz
          asset_name: FNEParrot-${{ needs.setup.outputs.VERSION }}-Linux-arm64.tar.gz
          asset_content_type: application/gzip
      - name: Upload release asset Winx64.zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: FNEParrot-${{ needs.setup.outputs.VERSION }}-Win64.zip
          asset_name: FNEParrot-${{ needs.setup.outputs.VERSION }}-Win64.zip
          asset_content_type: application/zip