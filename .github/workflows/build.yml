# Author: K4YT3X <i@k4yt3x.com>, Charles Bricker <MajMongoose>
# Compiles dvmfne2 for Linux, Windows, and upload the compiled files into a release

name: dvmfne2-build
on:
  workflow_dispatch:
    inputs:
      create_pre_release:
        description: "Create Pre-Release"
        required: false
        type: boolean
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  contents: write

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-20.04
    outputs:
      DATE: ${{ steps.get_date.outputs.DATE }}
    steps:
      - name: Get date
        id: get_date
        run: echo DATE=$(date +'%Y-%m-%d') >> $GITHUB_OUTPUT

  build:
    name: Build
    needs: [setup]
    strategy:
      matrix:
        runtime: [linux-x64, linux-arm64, win-x64]
    runs-on: ubuntu-20.04
    env:
      FNEROUTER_PATH: fnerouter-${{ needs.setup.outputs.DATE }}-${{ matrix.runtime }}
      FNEPARROT_PATH: fneparrot-${{ needs.setup.outputs.DATE }}-${{ matrix.runtime }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        working-directory: ./src
        run: dotnet restore
      - name: Build and Publish
        working-directory: ./src
        run: dotnet publish -c Release -r ${{ matrix.runtime }} --self-contained true
      - name: Package and Upload Artifacts (Linux)
        run: |
          mkdir "$FNEROUTER_PATH" "$FNEPARROT_PATH"

          cp -r src/fnerouter/bin/Release/netcoreapp3.1/${{ matrix.runtime }}/publish/* "$FNEROUTER_PATH"
          cp -r src/fneparrot/bin/Release/netcoreapp3.1/${{ matrix.runtime }}/publish/* "$FNEPARROT_PATH"

          zip -r fnerouter-${{ needs.setup.outputs.DATE }}-${{ matrix.runtime }}.zip "$FNEROUTER_PATH"
          zip -r fneparrot-${{ needs.setup.outputs.DATE }}-${{ matrix.runtime }}.zip "$FNEPARROT_PATH"
      - name: Upload Router Artifact
        uses: actions/upload-artifact@v2
        with:
          name: fnerouter-${{ needs.setup.outputs.DATE }}-${{ matrix.runtime }}
          path: fnerouter-${{ needs.setup.outputs.DATE }}-${{ matrix.runtime }}.zip
      - name: Upload Parrot Artifact
        uses: actions/upload-artifact@v2
        with:
          name: fneparrot-${{ needs.setup.outputs.DATE }}-${{ matrix.runtime }}
          path: fneparrot-${{ needs.setup.outputs.DATE }}-${{ matrix.runtime }}.zip

  create-release:
    if: ${{ github.event.inputs.create_pre_release == 'true' }}
    name: Create Release
    needs: [setup, build]
    runs-on: ubuntu-20.04
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.setup.outputs.DATE }}
          name: Nightly Build ${{ needs.setup.outputs.DATE }}
          draft: false
          prerelease: true

  upload:
    if: ${{ github.event.inputs.create_pre_release == 'true' }}
    name: Upload
    needs: [setup, build, create-release]
    strategy:
      matrix:
        runtime: [linux-x64, linux-arm64, win-x64]
    runs-on: ubuntu-20.04
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
      - name: Download fnerouter artifact
        uses: actions/download-artifact@v2
        with:
          name: fnerouter-${{ needs.setup.outputs.DATE }}-${{ matrix.runtime }}
      - name: Download fneparrot artifact
        uses: actions/download-artifact@v2
        with:
          name: fneparrot-${{ needs.setup.outputs.DATE }}-${{ matrix.runtime }}
      - name: Upload release asset (fnerouter)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: fnerouter-${{ needs.setup.outputs.DATE }}-${{ matrix.runtime }}.zip
          asset_name: fnerouter-${{ needs.setup.outputs.DATE }}-${{ matrix.runtime }}.zip
          asset_content_type: application/zip
      - name: Upload release asset (fneparrot)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: fneparrot-${{ needs.setup.outputs.DATE }}-${{ matrix.runtime }}.zip
          asset_name: fneparrot-${{ needs.setup.outputs.DATE }}-${{ matrix.runtime }}.zip
          asset_content_type: application/zip
